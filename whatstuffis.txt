CameraHandler.py
camera handler class, takes care of mouse on edge of screen and zoom and stuff

client.py
networking for client side manages connection to server, checking disconnect, sending and receiving of data

lobby.py
mockup lobby, atmo it has a chat text box and a send chat button and a ready button (ready tells server, and when all clients are ready game state happens)

## TODO
# lobby.py:
- readyCountdown of some kind.
- the chat string size should be bigger like BLOB.
## --------------------------->


main.py
main game client, kind of takes care of the transitions between states (prelobby,lobby,pregame,game)

mainmenu.py
welcomes user, and allows for ip input to connect to server

playstate.py
main game state for client, takes care of initialising game state stuff and getting key presses and mouse stuff, and processing the game packets and running simulation

pregame.py
does nothing at the moment, will be for spell selection and items and whatnot

prelobby.py
kinda a login screen, stole from somewhere on panda site i think :P has password and username and quit and login stuff

rencode.py
someones encoding stuff for networking stuff, used by server.py and client.py

server.py
networking for server side manages connections to all clients and data to all or just to specific and data from clients

server_inst.py
actual main server code, handles connecting clients, and kind of has code for the states, lobby (chat rerouting, and awaiting for all ready), pregame (just goes to game), game (movement updates for warklocks, and tick running)

## TODO : server_inst.py
- remove disconnected warlocks.


#------------------->

skybox.py
just code for creating the skybox

util.py
some utility functions

warlock.py
actual warlock class code, kinda implements basic physics and loading of models and updating with a deltatime for movements

world.py
loads the world doesnt do anything else yet